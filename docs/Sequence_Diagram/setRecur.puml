@startuml

actor User
participant NoteUrSavings
participant Parser
participant Transaction
participant Ui
participant TransactionManager
participant Storage

== Set Recurring Period ==
User -> NoteUrSavings : Enter "recur" command
activate NoteUrSavings
NoteUrSavings -> Parser : parser(command)
activate Parser
Parser -> TransactionManager : setRecur(id, period)
activate TransactionManager
TransactionManager -> Transaction : setRecurringPeriod(period)
activate Transaction
Transaction -> TransactionManager : recurringPeriod set to period
deactivate Transaction
Parser -> TransactionManager : searchTransaction(id)
TransactionManager --> Parser : transaction
deactivate TransactionManager
Parser -> Ui : setPeriod(transaction, period)
activate Ui
Ui -> Ui : Print updated transaction
Ui -> Parser : Updated status printed
deactivate Ui
Parser -> Storage : saveTransactions(transaction)
activate Storage
Storage -> Storage : Create data folder if needed
Storage -> Parser : Updated transactions stored
deactivate Storage
Parser -> NoteUrSavings : Command complete
deactivate Parser
NoteUrSavings -> User : Logic cycle end, await next input
deactivate NoteUrSavings


@enduml

